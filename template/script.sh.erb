#!/usr/bin/env bash
set -ex

# Benchmark info
echo "TIMING - Starting main script at: $(date)"

# Set working directory to home directory
cd "${HOME}"

#
# Start Jupyter Notebook Server
#

# Benchmark info
echo "TIMING - Starting jupyter at: $(date)"

CACHE_PATH="/opt/cache/pyxis"
IMAGE="<%= context.image ? j(context.image) : 'tensorflow/tensorflow:latest-gpu-jupyter'>"
IMAGE_DIR="$CACHE_PATH/$(dirname "$IMAGE")"
IMAGE_FULLPATH="$CACHE_PATH/$IMAGE"

mkdir -p $IMAGE_DIR
if [ ! -f "$IMAGE_FULLPATH" ]; then
	srun --ntasks=1 --mem=0 \
		--container-image="$IMAGE" \
		--container-save="$IMAGE_FULLPATH" \
		true
fi

tries=1; while [ "$tries" -lt 10 ]; do
	if file "$IMAGE_FULLPATH" | grep -q "Squashfs filesystem"; then
		break
	fi
	echo "Image is not complete. Wait a few seconds... ($tries/10)"
	sleep 10
	tries=$((tries+1))
done
if [ "$tries" -ge 10 ]; then
	echo "Image import failure. Please try an another experiment."
	exit 1
fi

. $LMOD_PKG/init/sh

# Launch the Jupyter Notebook Server
srun --container-workdir=${HOME} \
  --container-image="$IMAGE_FULLPATH" \
  --no-container-remap-root \
  --container-mount-home \
  --container-writable \
  --preserve-env \
  --container-mounts=/opt/gentoo:/opt/gentoo:ro,/opt/cvmfs:/opt/cvmfs:ro,/etc/slurm/taskprolog:/etc/slurm/taskprolog:ro \
  sh -c ". $LMOD_PKG/init/sh \
    && pip install -U jupyter \
    && pip install -U jupyterlab \
    && jupyter kernelspec list \
    && jupyter <%= context.mode == '1' ? 'lab' : 'notebook' %> --config=\"${CONFIG_FILE}\" <%= context.extra_jupyter_args %>"
