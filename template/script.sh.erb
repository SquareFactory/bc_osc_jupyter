#!/usr/bin/env bash
set -e

# Benchmark info
echo "TIMING - Starting main script at: $(date)"

# Set working directory to home directory
cd "${HOME}"

#
# Start Jupyter Notebook Server
#

# Benchmark info
echo "TIMING - Starting jupyter at: $(date)"

<% if context.image != "default" %>

CACHE_PATH="/opt/cache/pyxis"
IMAGE="<%= context.image ? context.image : 'tensorflow/tensorflow:latest-gpu-jupyter' %>"

<% if context.use_image_cache == "1" %>
IMAGE_DIR="$CACHE_PATH/$(dirname "$IMAGE")"
IMAGE_FULLPATH="$CACHE_PATH/$IMAGE"

mkdir -p $IMAGE_DIR
chmod 775 -R "$CACHE_PATH" || echo "We failed to chmod but we are ignoring it"
if [ ! -f "$IMAGE_FULLPATH" ]; then
	srun --ntasks=1 --mem=0 \
		--container-image="$IMAGE" \
		--container-save="$IMAGE_FULLPATH" \
		true
fi

tries=1; while [ "$tries" -lt 10 ]; do
	if file "$IMAGE_FULLPATH" | grep -q "Squashfs filesystem"; then
		break
	fi
	echo "Image is not complete. Wait a few seconds... ($tries/10)"
	sleep 10
	tries=$((tries+1))
done
if [ "$tries" -ge 10 ]; then
	echo "Image import failure. Please try an another experiment."
	exit 1
fi
<% end %>

. $LMOD_PKG/init/sh

set -ex

# Launch the Jupyter Notebook Server
srun --container-workdir=${HOME} \
  --container-image="<%= context.use_image_cache == "1" ? '$IMAGE_FULLPATH' : '$IMAGE' %>" \
  --no-container-remap-root \
  --container-mount-home \
  --container-writable \
  --preserve-env \
  --container-mounts=/opt/stdenv:/opt/stdenv:ro,/opt/software:/opt/software:ro \
  sh -c ". $LMOD_PKG/init/sh \
    && pip install -U jupyter \
    && pip install -U jupyterlab \
    && jupyter kernelspec list \
    && PYTHONPATH=\${PYTHONPATH}:$LMOD_PKG/init jupyter <%= context.mode == '1' ? 'lab' : 'notebook' %> --config=\"${CONFIG_FILE}\" <%= context.extra_jupyter_args %>"

<% else %>

srun /usr/bin/singularity exec \
  --nv \
  '/opt/unpacked/localhost:5000/library/pytorch:1.13.0-cuda11.6-cudnn8-runtime/' \
  sh -c "PYTHONPATH=\${PYTHONPATH}:$LMOD_PKG/init jupyter <%= context.mode == '1' ? 'lab' : 'notebook' %> --config=\"${CONFIG_FILE}\" <%= context.extra_jupyter_args %>"

<% end %>
